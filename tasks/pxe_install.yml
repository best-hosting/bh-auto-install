---

- block:
    - name: pxe (pxe_server) | Ensure user_dist directories exist
      file:
        dest: "{{ user_dist_dir }}"
        state: directory

    - name: pxe (pxe_server) | Download syslinux version archive
      get_url:
        url:  "{{ _syslinux_pkg.url }}"
        dest: "{{ _syslinux_pkg.archive_file }}"
        force: "{{ force_overwrite }}"
      register: syslinux_version_download

    - name: pxe (pxe_server) | Unpack syslinux version archive
      unarchive:
        src:  "{{ _syslinux_pkg.archive_file }}"
        dest: "{{ _syslinux_pkg.extract_dir }}"
        remote_src: yes
        creates: >-
          {{ ( force_overwrite or syslinux_version_download.changed )
              | ternary(file_does_not_exist, _syslinux_pkg.archive_dir + '/README')
          }}

    - name:
      assert:
        that:
          - 1 == 2

  when: _syslinux_pkg.version != ''
  delegate_to: "{{ _pxe_server }}"

- name: pxe (pxe_server) | Install pxelinux packages from OS
  package:
    name:
      - 'pxelinux'
      - 'syslinux-common'
    state: present

  when: _syslinux_pkg.version == ''
  delegate_to: "{{ _pxe_server }}"

- block:
    - name: pxe (pxe_server) | Copy pxelinux.0
      copy:
        src:  "{{ item }}"
        dest: "{{ pxe_root_path + '/' + item | basename }}"
        remote_src: yes
      vars:
        item: "{{ _syslinux_pkg.pxelinux_0 }}"

    - name: pxe (pxe_server) | Find syslinux modules
      find:
        paths: "{{ _syslinux_pkg.modules_dir }}"
      register: syslinux_modules

    - name: pxe (pxe_server) | Copy syslinux modules
      copy:
        src:  "{{ item.path }}"
        dest: "{{ pxe_modules_path + '/' + item.path | basename }}"
        remote_src: yes
      loop: "{{ syslinux_modules.files }}"

  delegate_to: "{{ _pxe_server }}"








- block:
    - name: pxe (pxe_server) | Install tftpd package
      package:
        name:
          - 'tftpd-hpa'
        state: present

    - name: pxe (pxe_server) | Ensure pxe directories exist
      file:
        dest: "{{ item }}"
        state: directory
      loop:
        - "{{ pxe_root_path }}"
        - "{{ pxe_modules_path }}"
        - "{{ pxe_root_path + '/pxelinux.cfg' }}"
      notify:
        - restart tftpd

    - name: pxe (pxe_server) | Set pxe root directory in tftp server
      lineinfile:
        path: '/etc/default/tftpd-hpa'
        backup: yes
        regexp: '^TFTP_DIRECTORY='
        line: "{{ 'TFTP_DIRECTORY=\"' + pxe_root_path + '\"' }}"
      notify:
        - restart tftpd

    - name: pxe (pxe_server) | Set tftp server listen address
      lineinfile:
        path: '/etc/default/tftpd-hpa'
        backup: yes
        regexp: '^TFTP_ADDRESS='
        line: "{{ 'TFTP_ADDRESS=\"' + hostvars[_pxe_server]._tftp_address + '\"' }}"
      notify:
        - restart tftpd

  delegate_to: "{{ _pxe_server }}"

