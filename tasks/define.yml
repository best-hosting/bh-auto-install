---

- block:
    - name: define (pxe_server) | Define pxe server config
      set_fact:
        _pxe_root_path: >-
          {{ item_pxe_root_path }}
        _pxe_cfg_d_path: >-
          {{ hostvars[_pxe_server].pxe_cfg_d_path | default(item_pxe_root_path + '/pxelinux_menus.d') }}
        _pxelinux_cfg: >-
          {{ item_pxelinux_cfg }}
        _pxelinux_incl_dir: >-
          {{ hostvars[_pxe_server].pxelinux_incl_dir | default(item_pxelinux_cfg | dirname) }}
      vars:
        item_pxe_root_path: >-
          {{ hostvars[_pxe_server].pxe_root_path | default('/srv/tftp') }}
        item_pxelinux_cfg: >-
          {{ hostvars[_pxe_server].pxelinux_cfg | default('pxelinux.cfg/default') }}
      delegate_facts: true
      delegate_to: "{{ _pxe_server }}"

    - name: define | Show pxe server config
      debug:
        msg: "{{ item + ': ' + hostvars[_pxe_server][item] }}"
      loop:
        - '_pxe_root_path'
        - '_pxe_cfg_d_path'
        - '_pxelinux_cfg'
        - '_pxelinux_incl_dir'

    - name: define (kickstart_server) | Define kickstart server config
      set_fact:
        _ks_root_path: >-
          {{ hostvars[_kickstart_server].ks_root_path | default('/srv/www') }}
      delegate_facts: true
      delegate_to: "{{ _kickstart_server }}"

    - name: define | Show kickstart server config
      debug:
        msg: "{{ item + ': ' + hostvars[_kickstart_server][item] }}"
      loop:
        - '_ks_root_path'

- block:
    - name: define | Define pxe menus config
      set_fact:
        _pxe_menus: >-
          {{ _pxe_menus | combine(
                { item : item_pxe_menu
                    | combine(
                        { 'cfg_d' : hostvars[_pxe_server]._pxe_cfg_d_path + '/' + item
                        , 'cfg'   : hostvars[_pxe_server]._pxelinux_incl_dir + '/' + item + '.cfg'
                        })
                })
          }}
      vars:
        item_pxe_menu: >-
          {{ pxe_menus[item] | default(
                  { 'desc' : item + ' (undefined pxe menu name)'
                                if item != hosts_pxe_menu
                                else 'Hosts'
                  })
          }}
      loop: >-
        {{ pxe_os.values()
                | selectattr('pxe_menu', 'defined')
                | map(attribute='pxe_menu')
                | unique() | list
              + [hosts_pxe_menu] }}

    - name: define | Show pxe OS menus config
      debug:
        var: _pxe_menus

- block:

    # FIXME: Check each ip network.
    # FIXME: Default to nothing.
    - name: define | Define OS install network config
      set_fact:
        _install_conf_net: >-
          {{
              {'net' : item_net
              , 'tftp_address' : item_tftp_address
              , 'ks_address'   : item_ks_address
              }
          }}
      vars:
        item_ip0_network: >-
          {{ install_conf.net[0].ip | ipaddr('network') }}
        def_ip0: >-
          {{  { 'gw' : net_conf[item_ip0_network].gw
                        if net_conf[item_ip0_network].gw is defined
                        else install_conf.net[0].gw
              , 'ns' : net_conf[item_ip0_network].ns
                        if net_conf[item_ip0_network].ns is defined
                        else install_conf.net[0].ns
              } if net_conf[item_ip0_network] is defined
                else
                { 'gw' : install_conf.net[0].gw
                , 'ns' : install_conf.net[0].ns
                }
          }}
        item_net: >-
          {{ [def_ip0 | combine(install_conf.net[0])] + install_conf.net[1:] }}
        item_tftp_address: >-
          {{ install_conf.tftp_address
              if install_conf.tftp_address is defined and install_conf.tftp_address | ipaddr
              else net_conf[item_ip0_network].tftp
          }}
        item_ks_address: >-
          {{ install_conf.ks_address
              if install_conf.ks_address is defined and install_conf.ks_address | ipaddr
              else net_conf[item_ip0_network].ks
          }}
      when: install_conf.net is defined

    - name: define | Show OS install net config
      debug:
        var: _install_conf_net

    - name: define | Define OS install config
      set_fact:
        _pxe_root_path: "{{ hostvars[_pxe_server]._pxe_root_path }}"
        _ks_root_path: "{{ hostvars[_kickstart_server]._ks_root_path }}"
        _install_conf: >-
          {{  { 'raid': default_raid
              , 'lvm' : default_lvm
              , 'vg_name' : item_name
              , 'rootpw_file' : item_rootpw_file
              , 'rootpw'  : lookup('password', item_rootpw_file + ' length=18 chars=ascii_letters,digits')
                              if inventory_hostname in groups['new'] and not inventory_hostname in groups['dummy']
                              else ''
              , 'disks' : ['sda', 'sdb'] if item_raid else ['sda']
              , 'gen_ks' : true
              , 'gen_pxe_host' : true
              } | combine(install_conf, _install_conf_net,
                    { 'name'    : item_name
                    , 'pxe_cfg' : _pxe_menus[hosts_pxe_menu].cfg_d + '/50_' + item_name + '.cfg'
                    , 'ks_cfg'  : hostvars[_kickstart_server]._ks_root_path + '/' + item_name + '.cfg'
                    , 'ks_url'  : 'http://' + _install_conf_net.ks_address + '/' + item_name + '.cfg'
                    }
                  )
          }}
      vars:
        item_name: >-
          {{ install_conf.name | default(inventory_hostname) }}
        item_raid: >-
          {{ install_conf.raid | default(default_raid) }}
        item_rootpw_file: >-
          {{ 'passwords/' + item_name }}

    - name: define | Show OS install config
      debug:
        var: _install_conf

    # This file may have been created implicitly by 'password' lookup plugin
    # in '_install_conf' definition, if it did not exist. But even if it was
    # created manually, i don't want to keep passwords for installed hosts.
    - name: define | Delete local password copy for _already_ installed hosts
      file:
        dest: "{{ _install_conf.rootpw_file }}"
        state: absent
      delegate_to: 'localhost'
      when: delete_installed_rootpw and inventory_hostname in groups['installed']

  when: inventory_hostname in groups['servers']

- block:
    - name: define | Define pxe OS config
      set_fact:
        _pxe_os: >-
          {{
              { 'name' : item_name
              , 'desc' : item_os.desc | default(omit)
              , 'url'  : item_os.url

              , 'iso_kernel'    : item_os.iso_kernel
              , 'iso_initrd'    : item_iso_initrd
              , 'iso_type'      : item_os.iso_type
              , 'iso_filename_rx' : item_os.iso_filename_rx

              , 'pxe_dir'       : item_pxe_dir
              , 'pxe_kernel'    : item_pxe_dir + '/' + item_os.iso_kernel | basename
              , 'pxe_kernel_type' : item_os.iso_kernel_type | default('')
              , 'pxe_initrd'    : item_pxe_dir + '/' + item_iso_initrd | basename
                                    if item_iso_initrd != ''
                                    else ''
              , 'pxe_append'    : item_os.pxe_append | default(omit)
              , 'ks_pxe_append' : item_os.ks_pxe_append | default(omit)
              , 'pxe_menu_cfg'  : hostvars[_pxe_server]._pxelinux_incl_dir
                                    + '/' + item_os.pxe_menu + '.cfg'
              , 'pxe_menu_cfg_d' : item_pxe_menu_cfg_d
              , 'pxe_cfg'       : item_pxe_menu_cfg_d
                                    + '/' + item_pxe_cfg_index + '_' + item_name + '.cfg'
              , 'gen_pxe_os'  : item_os.gen_pxe_os | default(true)
              }
          }}
      vars:
        item_name: >-
          {{ _install_conf['os'] }}
        item_os: >-
          {{ pxe_os[item_name] }}
        item_iso_initrd: >-
          {{ item_os.iso_initrd | default('') }}
        item_pxe_dir: >-
          {{ item_name }}
        item_pxe_menu_cfg_d: >-
          {{ hostvars[_pxe_server]._pxe_cfg_d_path + '/' + item_os.pxe_menu }}
        item_pxe_cfg_index: >-
          {{ pxe_os_cfg_index_offset + item_os.sort_index }}

    - name: define | Define pxe OS checksum config
      set_fact:
        _pxe_os: >-
          {{ _pxe_os | combine(
                { 'checksum_url'  : item_checksum_url
                , 'checksum_rx'   : item_os.checksum_rx
                , 'checksum_iso_name_rx' : item_os.checksum_iso_name_rx
                , 'checksum_type' : item_os.checksum_type
                , 'checksum_dir'  : item_checksum_dir
                , 'checksum_file' : item_checksum_dir + '/' + item_os.checksum_fn
                }
              )
          }}
      vars:
        item_os: >-
          {{ pxe_os[_pxe_os.name] }}
        item_checksum_url: >-
          {{ item_os.checksum_url | default(item_os.url) + '/' + item_os.checksum_fn }}
        item_checksum_dir: >-
          {{ images_checksum_dir + '/' + _pxe_os.name }}
      when: pxe_os[_pxe_os.name].checksum_fn is defined

    - name: define | Show pxe OS config
      debug:
        var: _pxe_os

  when: inventory_hostname in groups['servers']

- block:
    - name: define | Stat mail username and password file
      stat:
        path: "{{ mail_auth_file }}"
      register: mail_auth_file_stats
      delegate_to: localhost

    - name: define | Read mail username and password
      include_vars:
        file: "{{ mail_auth_file }}"
        name: mail_auth
      when: mail_auth_file_stats.stat.exists

    - name: define | Set mail config
      set_fact:
        _mail_config: >-
          {{  merged_items
                | combine(
                    { 'host' : item_host
                    , 'username' : item_username
                    , 'password' : item_password
                    , 'to' : item_to
                    , 'sender' : item_sender
                    , 'subject' : item_subject
                    , 'body' : item_body
                    }
                  )
          }}
      vars:
        item_host: >-
          {{ mail_report_config.host }}
        merged_items: >-
          {{ mail_report_config | combine(mail_auth) }}
        item_username: >-
          {{ merged_items.username }}
        item_password: >-
          {{ merged_items.password }}
        item_to: >-
          {{ merged_items.to | default(item_username) }}
        item_sender: >-
          {{ merged_items.sender | default(item_username) }}
        item_subject: >-
          {{ merged_items.subject
                | default('Ansible: Server(s) '
                      + ansible_play_hosts | map('regex_replace', '_', '-') | join(', ')
                      + ' access details'
                    )
          }}
        # ' match quotes for broken highlighting.
        item_body: >-
          {{ merged_items.body
                | default(lookup('template', './templates/access_details_email.txt'))
          }}

    - name: define | Show mail config
      debug:
        var: _mail_config

  when:     inventory_hostname     in groups['servers']
        and inventory_hostname not in groups['dummy']
        and mail_report_config.host is defined

